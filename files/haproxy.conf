global
  daemon
  nbthread 4
  maxconn 256
  ulimit-n 65536
  stats socket /var/run/haproxy/global.socket mode 0600 level admin user GREST_USER
  log 127.0.0.1 local0 notice
  #tune.disable-zero-copy-forwarding
  insecure-fork-wanted
  external-check

defaults
  mode http
  log global
  option dontlognull
  option http-ignore-probes
  option http-server-close
  option forwardfor
  #log-format \"%ci:%cp a:%f/%b/%s t:%Tq/%Tt %{+Q}r %ST b:%B C:%ac,%fc,%bc,%sc Q:%sq/%bq\"
  option dontlog-normal
  timeout client 120s
  timeout server 120s
  timeout connect 3s
  timeout server-fin 2s
  timeout http-request 5s
  timeout queue 10s

frontend app
  bind 0.0.0.0:8053
  ## If using SSL, comment line above and uncomment line below
  #bind :8453 ssl crt /etc/ssl/server.pem no-sslv3
  #compression direction response
  #compression algo-res gzip
  #compression type-res application/json
  option http-buffer-request
  http-request set-log-level silent
  acl srv_down nbsrv(grest_postgrest) eq 0
  acl is_wss hdr(Upgrade) -i websocket
  http-request use-service prometheus-exporter if { path /metrics }
  http-request track-sc0 src table flood_lmt_rate
  http-request deny deny_status 429 if { sc_http_req_rate(0) gt 500 }
  use_backend ogmios if { path_beg /api/v1/ogmios } || { path_beg /dashboard.js } || { path_beg /assets } || { path_beg /health } || is_wss
  use_backend submitapi if { path_beg /api/v1/submittx }
  use_backend grest_failover if srv_down
  default_backend grest_postgrest

backend grest_postgrest
  balance first
  #option external-check
  acl grestviews path_beg -f HAPROXY_CONFIG/rpc/grest
  http-request set-path "%[path,regsub(^/api/v1/,/)]"
  http-request set-path "%[path,regsub(^/,/rpc/)]" if !grestviews !{ path_beg /rpc } !{ path -i / }
  #external-check path \"/usr/bin:/bin:/tmp:/sbin:/usr/sbin\"
  #external-check command \"\\\$GRESTTOP\"/scripts/grest-poll.sh
  server local 127.0.0.1:8050 check inter 20000 fall 1 rise 2

backend grest_failover
  server koios-ssl KOIOS_URL:443 ssl verify none
  http-request set-header X-HAProxy-Hostname "KOIOS_URL"
  http-response set-header X-Failover true
  
backend ogmios
  balance first
  http-request set-path "%[path,regsub(^/api/v1/ogmios.*,/)]"
  option httpchk GET /health
  http-check expect status 200
  default-server inter 20s fall 1 rise 2
  server local 127.0.0.1:1337 check

backend submitapi
  balance first
  option httpchk POST /api/submit/tx
  http-request set-path "%[path,regsub(^/api/v1/submittx,/api/submit/tx)]"
  http-check expect status 415
  default-server inter 20s fall 1 rise 2
  server local 127.0.0.1:8090 check
  #server koios-ssl ${KOIOS_SRV}:443 backup ssl verify none
  http-after-response set-header Access-Control-Allow-Origin *
  http-after-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept"
  http-after-response set-header Access-Control-Allow-Methods "GET, HEAD, OPTIONS, POST"
  http-response return status 200 if METH_OPTIONS

backend flood_lmt_rate
  stick-table type ip size 1m expire 10m store http_req_rate(10s)
